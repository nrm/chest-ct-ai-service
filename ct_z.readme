# ct_z.py — Z-профиль КТ лёгких и скрининговый скор

Инструмент для быстрого «скрининга по срезам»: извлекает лёгочные признаки из серии DICOM-срезов, строит профили по оси z и вычисляет простой агрегированный скор аномальности (0–1). Подходит для первичного анализа больших серий и наведения на подозрительные участки.

## Возможности

* Поддержка обычного и «расширенного» (Enhanced) CT-DICOM.
* Автоматический сбор серии из папки или zip-архива.
* Пер-срезная сегментация лёгких (порог + морфология) и разделение на левое/правое лёгкое.
* Извлечение признаков: площадь лёгких, средний HU, доля уплотнения >−500 HU и >−300 HU, доля эмфиземы <−950 HU, асимметрия L/R.
* Расчёт интегрального скора аномальности и выделение подозрительных z-участков.
* Визуализация профилей и экспорт в CSV.

## Быстрый старт

```bash
# Установка зависимостей (однократно)
python -m pip install numpy matplotlib pydicom scikit-image

# Запуск на папке с DICOM
python ct_z.py /path/to/dicom --smooth 5 --score-thresh 0.7 --csv out.csv
```

После запуска появится окно с 4 графиками, а при указании `--csv` создастся файл с признаками по срезам.

## Входные данные

* **dicom_dir** — путь к директории с DICOM-файлами серии *или* к zip-архиву.
* Если в директории несколько серий, берётся первая найденная (при необходимости адаптируйте под свой кейс).

## Как это работает (конвейер)

1. **Загрузка серии**: скрипт обходится по файлам (или членам zip), отбирает CT-подобные объекты по `SOPClassUID`/`Modality`, группирует их по `SeriesInstanceUID` и выбирает одну серию.
2. **Сортировка**: срезы упорядочиваются по `ImagePositionPatient[2]` (z) либо по `InstanceNumber`.
3. **Преобразование в HU**: применяется `RescaleSlope`/`RescaleIntercept`.
4. **Сегментация лёгких (на каждом срезе)**:

   * Порог по воздуху: HU < −500.
   * Удаление компонентов, касающихся границы кадра (наружный воздух).
   * Морфологическое закрытие, удаление мелких объектов и заполнение дыр.
   * Оставляются до двух крупнейших компонент; далее они разделяются на левую/правую по координате центра.
5. **Извлечение признаков** (по маске лёгких):

   * `lung_area_px` и, при наличии `PixelSpacing`, `lung_area_mm2`.
   * `mean_lung_HU` — средний HU внутри лёгких.
   * Фракции плотностей: `frac_dense_m500` (HU > −500), `frac_dense_m300` (HU > −300), `frac_emph_m950` (HU < −950).
   * `LR_asym` — относительная асимметрия площади левого/правого лёгкого.
6. **Z‑профили и сглаживание**: для отображения отдельные кривые можно сгладить скользящим средним (`--smooth`). Сырые значения при этом не меняются.
7. **Скор аномальности (0–1)**: нормируются ряды по срезам (минимакс), затем складываются с весами:

   * 0.45 × нормированная `frac_dense_m500`

   * 0.25 × нормированный `mean_lung_HU`

   * 0.10 × нормированный `LR_asym`

   * 0.10 × (1 − нормированная `lung_area_px`)  *(меньше воздуха → хуже)*

   > Примечание: `frac_emph_m950` используется для визуального профиля, но **не входит** в скор.
8. **Порог и подсветка**: отрисовывается горизонтальная линия порога `--score-thresh` (по умолчанию 0.7) и полупрозрачные выделения для непрерывных участков выше порога.

## Параметры командной строки

* `dicom_dir` — путь к папке с DICOM или zip‑архиву **(обязателен)**.
* `--smooth <int>` — окно скользящего среднего по срезам для отображения (по умолчанию 1 = без сглаживания).
* `--score-thresh <float>` — порог подсветки по скору (по умолчанию 0.7).
* `--csv <path>` — путь для сохранения таблицы признаков по срезам.

## Выходные данные

### Графики

1. **Площадь лёгких** vs z/индекс среза.
2. **Фракции плотностей**: >−500, >−300 и <−950 HU.
3. **Асимметрия L/R** (левая ось) и **средний HU** (правая ось).
4. **Интегральный скор** с линией порога и подсветкой подозрительных интервалов.

### CSV (`--csv`)

Колонки: `z`, `lung_area_px`, `lung_area_mm2`, `mean_lung_HU`, `frac_dense_m500`, `frac_dense_m300`, `frac_emph_m950`, `LR_asym`, `score`.

## Интерпретация

* **Высокий скор** указывает на участки с увеличенной плотностью лёгких, снижением воздушности и/или выраженной асимметрией.
* **Порог 0.7** подобран как консервативный ориентир; подбирайте под задачу.
* Сглаживание влияет **только на вид графиков**, а не на исходные значения и CSV.

## Ограничения и оговорки

* Сегментация лёгких **эвристическая** и может давать сбои при крайней патологии, артефактах, обрезанных полях зрения, необычной укладке и т.п.
* Скрипт ориентирован на **крупномасштабные** изменения; очаги/узлы малого размера могут не отражаться на скоре.
* Если в директории несколько серий, берётся первая — при необходимости измените логику выбора.
* Если `ImagePositionPatient` отсутствует для большинства срезов, по оси X используется **индекс среза**, а не миллиметры.
* **Не является медицинским заключением** — инструмент для приоритизации и наведения.

## Частые вопросы

**Q: Окно графиков не открывается на сервере.**
A: Убедитесь, что настроен backend `matplotlib` с поддержкой вывода (или сохраните рисунки вручную, добавив `plt.savefig(...)`).

**Q: Почему площадь в мм² равна `null`?**
A: В DICOM нет `PixelSpacing` или он некорректен — доступна только площадь в пикселях.

**Q: Можно ли изменить пороги сегментации?**
A: Да, по необходимости адаптируйте значение порога (−500 HU) и параметры морфологии в функции сегментации.

## Требования

* Python ≥ 3.8
* `numpy`, `matplotlib`, `pydicom`, `scikit-image`

## Дисклеймер

Инструмент предоставляется «как есть» и предназначен исключительно для исследовательского использования и ускорения рутинного просмотра. Решения о диагнозе должны приниматься специалистами на основе полного клинического контекста.

