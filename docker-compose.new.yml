services:
  # Backend API (RadiAssist)
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      # Build arguments for customization
      args:
        - PYTHON_VERSION=3.11
      # Enable BuildKit for better caching
      target: runtime
    image: radiassist-api:latest
    container_name: radiassist-api
    ports:
      - "8000:8000"
    env_file: .env
    environment:
      - PYTHONPATH=/app
      - MAX_CONCURRENT_JOBS=2
      - PROCESSING_TIMEOUT=600
    volumes:
      # Persistent data storage
      - ./data:/app/data
      - ./logs:/app/logs
      # Development: mount source for hot reload (comment out for production)
      # - ./main.py:/app/main.py
      # - ./hackathon:/app/hackathon
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s  # Allow more time for model loading
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          memory: 2G
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Frontend веб-приложение
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:8000

  # Опциональный: Nginx как reverse proxy для production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    profiles:
      - production

  # Frontend только (для подключения к удаленному backend)
  frontend-remote:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3001:80"
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=${RADIASSIST_BACKEND_URL}
    profiles:
      - remote

  # Nginx для remote режима
  nginx-remote:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    environment:
      - radiassist_backend_url=${RADIASSIST_BACKEND_URL}
    restart: unless-stopped
    profiles:
      - remote-nginx

# Networks
networks:
  default:
    name: radiassist-network
